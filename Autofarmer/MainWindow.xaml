<Window x:Class="Autofarmer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Autofarmer.ViewModels"
        xmlns:local="clr-namespace:Autofarmer"
        mc:Ignorable="d"
        Title="MainWindow" 
        MinHeight="900"
        Height="900"
        MinWidth="1200"
        Width="1200"
        WindowStartupLocation="CenterScreen"
        FontFamily="Calibri"
        Foreground="White"
        FontSize="28"
        Icon="Images/borderless_icon.ico">
    
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="BetterButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="30"  BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#9D44C0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#9D44C0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Border>
        <Border.Background>
            <LinearGradientBrush
                StartPoint="0, 2"
                EndPoint="1, 1">
                <GradientStop 
                    Color="Purple" 
                    Offset="0.4"/>
                <GradientStop 
                    Color="Blue" 
                    Offset="3"/>
            </LinearGradientBrush>
        </Border.Background>

        <Grid
            Background="Transparent">

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height=".2*"/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            Name="border"
            BorderThickness="5"
            HorizontalAlignment="Stretch"      
            Margin="10">

                

                <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="0" 
                        Foreground="White"
                        Background="Transparent"
                        BorderThickness="0"  
                        Padding="10"
                        IsReadOnly="True"
                        Text="{Binding CurrentAccount.Id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <TextBox
                        Grid.Column="1"
                        Foreground="White"
                        Background="Transparent"
                        BorderThickness="0"
                        HorizontalContentAlignment="Right"                 
                        Padding="10"
                        IsReadOnly="True"
                        Text="{Binding CurrentAccountNumber, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                </Grid>


                <Grid
                    Grid.Row="1"
                    Margin="0 0 0 10">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Padding="10 0 0 0"
                        VerticalAlignment="Center" 
                        Text="email:"/>
                    
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="0"                
                        Foreground="White"
                        Background="Transparent"
                        BorderThickness="0"
                        Padding="10 0 0 0"
                        VerticalContentAlignment="Center"
                        IsReadOnly="True"
                        Text="{Binding CurrentAccount.Email.Email, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="1"
                        VerticalAlignment="Center" 
                        Text="password:"/>

                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Foreground="White"
                        Background="Transparent"
                        BorderThickness="0"
                        VerticalContentAlignment="Center"
                        IsReadOnly="True"
                        Text="{Binding CurrentAccount.Email.Password, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="2"
                        VerticalAlignment="Center" 
                        Text="recovery:"/>

                    <TextBox
                        Grid.Row="1"
                        Grid.Column="2"
                        Foreground="White"
                        Background="Transparent"
                        BorderThickness="0"
                        VerticalContentAlignment="Center"
                        IsReadOnly="True"
                        Text="{Binding CurrentAccount.Email.Recovery, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>


                </Grid>

                <Grid
                    Grid.Row="2">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <Image    
                        Margin="10"
                        Grid.Column="0"
                        Source="{Binding CurrentAccount.Email.QRCode}"
                        RenderOptions.EdgeMode="Aliased">
                    </Image>

                    <Grid
                        Grid.Column="1"
                        Margin="0">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="4*"/>
                        </Grid.RowDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Grid.Row="0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Text="Долгота"/>
                        
                        <TextBlock
                            Grid.Column="1"
                            Grid.Row="0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Text="Широта"/>

                        <TextBox 
                            Grid.Row="1"
                            Grid.Column="0"
                            Foreground="White"
                            Background="Transparent"
                            BorderThickness="0"
                            VerticalContentAlignment="Top"
                            HorizontalContentAlignment="Center"
                            TextWrapping="WrapWithOverflow"                    
                            Padding="10"
                            IsReadOnly="True"
                            Text="X coords"/>

                        <TextBox 
                            Grid.Row="1"
                            Grid.Column="1"
                            Foreground="White"
                            Background="Transparent"
                            BorderThickness="0"
                            VerticalContentAlignment="Top"
                            HorizontalContentAlignment="Center"
                            TextWrapping="WrapWithOverflow"                    
                            Padding="10"
                            IsReadOnly="True"
                            Text="Y coords"/>

                        <Button
                            Style="{StaticResource BetterButtonStyle}"
                            Foreground="White"
                            Background="Transparent"
                            BorderThickness="0"
                            Width="200"
                            Grid.Row="0"
                            Grid.Column="2"
                            Content="Copy full email"
                            Command="{Binding CopyToClipboardCommand}"
                            CommandParameter="{Binding CurrentAccount.Email.FullEmailString}"/>

                    </Grid>
                    
                </Grid>

                <TextBox
                    Grid.Row="3"
                    Foreground="White"
                    Background="Transparent"
                    VerticalContentAlignment="Top"  
                    BorderThickness="0"
                    TextWrapping="WrapWithOverflow"  
                    Margin="0 20 0 0"
                    Padding="10"
                    IsReadOnly="True"
                    Text="{Binding CurrentAccount.FullDescription, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                <TextBox
                    Grid.Row="4"
                    Foreground="White"
                    Background="Transparent"
                    BorderThickness="0"
                    VerticalContentAlignment="Center"
                    TextWrapping="WrapWithOverflow"                    
                    Padding="10"
                    IsReadOnly="True"
                    Text="{Binding CurrentAccount.Job, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                
                <TextBox
                    Grid.Row="5"
                    Foreground="White"
                    Background="Transparent"
                    BorderThickness="0"
                    VerticalContentAlignment="Center"
                    TextWrapping="WrapWithOverflow"                    
                    Padding="10"
                    IsReadOnly="True"
                    Text="{Binding CurrentAccount.Company, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>



            </Grid>
        </Border>



        <Grid
            Grid.Row="1"            
            HorizontalAlignment="Stretch">

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button 
                Foreground="White"
                Background="Transparent"
                FontSize="32"
                Style="{DynamicResource BetterButtonStyle}"
                Grid.Column="0"
                Margin="10 20 240 20"
                Content="Previous"
                Command="{Binding PreviousAccountCommand}">
            </Button>
            <Button
                Foreground="White"
                Background="Transparent"
                FontSize="32"
                Style="{DynamicResource BetterButtonStyle}" 
                Grid.Column="2"
                Margin="240 20 10 20"
                Content="Next"
                Command="{Binding NextAccountCommand}">
            </Button>
        </Grid>



    </Grid>

    </Border>
</Window>
